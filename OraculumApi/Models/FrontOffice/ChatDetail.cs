/*
 * Sibylla API
 *
 * API for Sibylla frontend
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace OraculumApi.Models.FrontOffice
{
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class ChatDetail : IEquatable<ChatDetail>
    {
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [Required]

        [DataMember(Name = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>

        [DataMember(Name = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets SibyllaId
        /// </summary>

        [DataMember(Name = "sibyllaId")]
        public string SibyllaId { get; set; }

        /// <summary>
        /// Gets or Sets ReferenceIds
        /// </summary>

        [DataMember(Name = "referenceIds")]
        public ReferenceIds ReferenceIds { get; set; }

        /// <summary>
        /// Gets or Sets Messages
        /// </summary>

        [DataMember(Name = "messages")]
        public List<Message> Messages { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ChatDetail {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  SibyllaId: ").Append(SibyllaId).Append("\n");
            sb.Append("  ReferenceIds: ").Append(ReferenceIds).Append("\n");
            sb.Append("  Messages: ").Append(Messages).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((ChatDetail)obj);
        }

        /// <summary>
        /// Returns true if ChatDetail instances are equal
        /// </summary>
        /// <param name="other">Instance of ChatDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ChatDetail other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) &&
                (
                    Name == other.Name ||
                    Name != null &&
                    Name.Equals(other.Name)
                ) &&
                (
                    SibyllaId == other.SibyllaId ||
                    SibyllaId != null &&
                    SibyllaId.Equals(other.SibyllaId)
                ) &&
                (
                    ReferenceIds == other.ReferenceIds ||
                    ReferenceIds != null &&
                    ReferenceIds.Equals(other.ReferenceIds)
                ) &&
                (
                    Messages == other.Messages ||
                    Messages != null &&
                    Messages.SequenceEqual(other.Messages)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                if (Name != null)
                    hashCode = hashCode * 59 + Name.GetHashCode();
                if (SibyllaId != null)
                    hashCode = hashCode * 59 + SibyllaId.GetHashCode();
                if (ReferenceIds != null)
                    hashCode = hashCode * 59 + ReferenceIds.GetHashCode();
                if (Messages != null)
                    hashCode = hashCode * 59 + Messages.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
#pragma warning disable 1591

        public static bool operator ==(ChatDetail left, ChatDetail right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(ChatDetail left, ChatDetail right)
        {
            return !Equals(left, right);
        }

#pragma warning restore 1591
        #endregion Operators
    }
}
